----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    16:03:45 11/03/2022 
-- Design Name: 
-- Module Name:    fifo - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

---- Uncomment the following library declaration if instantiating
---- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity fifo is
Generic(
constant DATA_WIDTH:positive:=4;
constant FIFO_DEPTH:positive:=4);
    Port ( CLK : in  STD_LOGIC;
           RST : in  STD_LOGIC;
           WriteEn : in  STD_LOGIC;
           DataIn : in  STD_LOGIC_VECTOR (3 downto 0);
           ReadEn : in  STD_LOGIC;
           DataOut : out  STD_LOGIC_VECTOR (3 downto 0);
           Empty : out  STD_LOGIC;
           Full : out  STD_LOGIC);
end fifo;

architecture Behavioral of fifo is

begin
--memory Pointer Process
fifo_proc:process(CLK)
type FIFO_Meomory is array(0 to FIFO_DEPTH-1) of STD_LOGIC_VECTOR
(DATA_WIDTH -1
downto 0);
variable Memory : FIFO_Meomory;

variable Head : natural range 0 to FIFO_DEPTH - 1;
variable Tail: natural range 0 to FIFO_DEPTH - 1;
Variable Looped : boolean;
begin
if rising_edge(CLK)then
if RST = '1' then 
Head:= 0;
Tail:=0;
Looped := false;
Full <= '0';
Empty <= '1';
else
if (ReadEn = '1') then
if((Looped = true) or (Head /= Tail)) then
--Update data output
Dataout <= Memory(Tail);
--update Tail pointer as needed
if(Tail = FIFO_DEPTH - 1) then
Tail:= 0 ;
Looped := false;
else
Tail := Tail + 1;
end if;
end if;
end if;
if (WriteEn = '1') then
if ((Looped = false) or (Head /= Tail)) then 
--- Write data to memory
Memory(head):=DataIn;
---Increment Head pointer as needed 
if(Head =FIFO_DEPTH - 1) then
Head:= 0;
Looped := true;
else
Head := Head+1;
end if;
end if;
end if;
-- Update empty and full flags 
if(Head = Tail) then
if Looped then
Full <= '1';
else
Empty <= '1';
end if;
else
Empty <= '0';
Full <= '0';
end if;
end if;
end if;


end process;

end Behavioral;

